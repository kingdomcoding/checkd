defmodule Checkd.Repo.Migrations.Initialize do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:badge_user__read_models__users, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
    end

    create table(:badge_user__read_models__my_public_badges, primary_key: false) do
      add :user_id, :uuid, null: false, primary_key: true
      add :badge_id, :uuid, null: false, primary_key: true
    end

    create table(:badge_user__read_models__my_badges, primary_key: false) do
      add :user_id, :uuid, null: false, primary_key: true
      add :badge_id, :uuid, null: false, primary_key: true
      add :authenticated_on, :date
      add :validation_count, :bigint, null: false, default: 0
    end

    create table(:badge_user__read_models__badges, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
    end

    alter table(:badge_user__read_models__my_public_badges) do
      modify :badge_id,
             references(:badge_user__read_models__badges,
               column: :id,
               name: "badge_user__read_models__my_public_badges_badge_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:badge_user__read_models__my_badges) do
      modify :badge_id,
             references(:badge_user__read_models__badges,
               column: :id,
               name: "badge_user__read_models__my_badges_badge_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:badge_user__read_models__badges) do
      add :name, :text, null: false
      add :issuer, :text, null: false
      add :image, :text, null: false
      add :overview, :text, null: false
      add :information, :map
      add :offer, :map
    end
  end

  def down do
    alter table(:badge_user__read_models__badges) do
      remove :offer
      remove :information
      remove :overview
      remove :image
      remove :issuer
      remove :name
    end

    drop constraint(
           :badge_user__read_models__my_badges,
           "badge_user__read_models__my_badges_badge_id_fkey"
         )

    alter table(:badge_user__read_models__my_badges) do
      modify :badge_id, :uuid
    end

    drop constraint(
           :badge_user__read_models__my_public_badges,
           "badge_user__read_models__my_public_badges_badge_id_fkey"
         )

    alter table(:badge_user__read_models__my_public_badges) do
      modify :badge_id, :uuid
    end

    drop table(:badge_user__read_models__badges)

    drop table(:badge_user__read_models__my_badges)

    drop table(:badge_user__read_models__my_public_badges)

    drop table(:badge_user__read_models__users)
  end
end
